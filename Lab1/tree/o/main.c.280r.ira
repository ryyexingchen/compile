
;; Function main (main, funcdef_no=0, decl_uid=2313, cgraph_uid=1, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 8 count 8 (    1)
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 7 6 }
;; 6 succs { }
;; 7 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 55.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best SIREG, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r86,l0) best SIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a9 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r82: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r82,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:7000
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a2(r82,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a3(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a4(r90,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a5(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r87,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r86,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r85,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:16000 NO_REX_SSE_REGS:16000 SSE_REGS:16000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000

   Insn 59(l0): point = 0
   Insn 58(l0): point = 2
   Insn 55(l0): point = 5
   Insn 54(l0): point = 8
   Insn 53(l0): point = 10
   Insn 49(l0): point = 12
   Insn 46(l0): point = 14
   Insn 38(l0): point = 17
   Insn 37(l0): point = 19
   Insn 36(l0): point = 21
   Insn 35(l0): point = 23
   Insn 34(l0): point = 25
   Insn 33(l0): point = 27
   Insn 32(l0): point = 29
   Insn 31(l0): point = 31
   Insn 30(l0): point = 33
   Insn 29(l0): point = 35
   Insn 28(l0): point = 37
   Insn 27(l0): point = 39
   Insn 44(l0): point = 42
   Insn 43(l0): point = 44
   Insn 41(l0): point = 46
   Insn 63(l0): point = 49
   Insn 23(l0): point = 51
   Insn 22(l0): point = 53
   Insn 21(l0): point = 55
   Insn 20(l0): point = 57
   Insn 19(l0): point = 59
   Insn 18(l0): point = 61
   Insn 17(l0): point = 63
   Insn 16(l0): point = 65
   Insn 15(l0): point = 67
   Insn 14(l0): point = 69
   Insn 13(l0): point = 71
   Insn 12(l0): point = 73
   Insn 11(l0): point = 75
   Insn 10(l0): point = 77
   Insn 9(l0): point = 79
   Insn 8(l0): point = 81
   Insn 7(l0): point = 83
   Insn 6(l0): point = 85
   Insn 3(l0): point = 87
 a0(r84): [8..12] [3..4]
 a1(r83): [13..14]
 a2(r82): [45..46]
 a3(r91): [20..21]
 a4(r90): [30..31]
 a5(r89): [34..35]
 a6(r88): [38..39]
 a7(r87): [58..59]
 a8(r86): [68..69]
 a9(r85): [78..79]
Compressing live ranges: from 90 to 22 - 24%
Ranges after the compression:
 a0(r84): [0..3]
 a1(r83): [4..5]
 a2(r82): [14..15]
 a3(r91): [6..7]
 a4(r90): [8..9]
 a5(r89): [10..11]
 a6(r88): [12..13]
 a7(r87): [16..17]
 a8(r86): [18..19]
 a9(r85): [20..21]
  pref0:a4(r90)<-hr4@1500
  pref1:a7(r87)<-hr4@1500
  pref2:a8(r86)<-hr4@1500
  pref3:a9(r85)<-hr4@1500
  pref4:a0(r84)<-hr0@1500
  regions=1, blocks=8, points=22
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10
Disposition:
    2:r82  l0     0    1:r83  l0     0    0:r84  l0     0    9:r85  l0     0
    8:r86  l0     0    7:r87  l0     0    6:r88  l0     0    5:r89  l0     0
    4:r90  l0     0    3:r91  l0     0
+++Costs: overall -5000, reg -5000, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,6u} r1={6d} r2={6d} r4={10d,4u} r5={10d,4u} r6={1d,7u} r7={1d,12u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,6u} r17={11d,2u} r18={5d} r19={1d,27u} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r82={1d,1u} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} 
;;    total ref usage 461{383d,78u,0e} in 42{37 regular + 5 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.2327+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":5:1 976 {stack_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A32])
        (const_int 0 [0])) "main.c":8:6 67 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])
        (const_int 1 [0x1])) "main.c":9:6 67 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "main.c":10:6 67 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 85)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":11:4 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 85)) "main.c":11:4 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f0115cf6510 *.LC0>)) "main.c":11:4 66 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":11:4 69 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f0115c1f600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":11:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 14 13 15 2 (set (reg:SI 86)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A32])) "main.c":12:4 67 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SI 4 si)
        (reg:SI 86)) "main.c":12:4 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 86)
        (nil)))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f0115cf65a0 *.LC1>)) "main.c":12:4 66 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":12:4 69 {*movqi_internal}
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f0115c1ea00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":12:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 19 18 20 2 (set (reg:SI 87)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])) "main.c":13:4 67 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (reg:SI 87)) "main.c":13:4 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 87)
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f0115cf65a0 *.LC1>)) "main.c":13:4 66 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":13:4 69 {*movqi_internal}
     (nil))
(call_insn 23 22 63 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f0115c1ea00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":13:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(jump_insn 63 23 64 2 (set (pc)
        (label_ref 39)) "main.c":15:9 660 {jump}
     (nil)
 -> 39)
(barrier 64 63 42)
(code_label 42 64 26 3 3 (nil) [1 uses])
(note 26 42 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg:SI 88)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])) "main.c":17:9 67 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 t+0 S4 A32])
        (reg:SI 88)) "main.c":17:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 88)
        (nil)))
(insn 29 28 30 3 (set (reg:SI 89)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A32])) "main.c":18:9 67 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])
                    (reg:SI 89)))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:9 190 {*addsi_1}
     (expr_list:REG_DEAD (reg:SI 89)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 3 (set (reg:SI 90)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])) "main.c":19:7 67 {*movsi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:SI 4 si)
        (reg:SI 90)) "main.c":19:7 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 90)
        (nil)))
(insn 33 32 34 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f0115cf65a0 *.LC1>)) "main.c":19:7 66 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":19:7 69 {*movqi_internal}
     (nil))
(call_insn 35 34 36 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f0115c1ea00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":19:7 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (nil))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 36 35 37 3 (set (reg:SI 91)
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4])) [2 t+0 S4 A32])) "main.c":20:9 67 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A32])
        (reg:SI 91)) "main.c":20:9 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 91)
        (nil)))
(insn 38 37 39 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                        (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":21:9 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(code_label 39 38 40 4 2 (nil) [1 uses])
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 43 4 (set (reg:SI 82 [ n.0_1 ])
        (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 n+0 S4 A32])) "main.c":15:12 67 {*movsi_internal}
     (nil))
(insn 43 41 44 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A32])
            (reg:SI 82 [ n.0_1 ]))) "main.c":15:9 11 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 82 [ n.0_1 ])
        (nil)))
(jump_insn 44 43 45 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "main.c":15:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 42)
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 49 5 (set (reg:SI 83 [ _14 ])
        (const_int 0 [0])) "<built-in>":0:0 67 {*movsi_internal}
     (nil))
(insn 49 46 53 5 (set (reg:SI 84 [ <retval> ])
        (reg:SI 83 [ _14 ])) "<built-in>":0:0 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 83 [ _14 ])
        (nil)))
(insn 53 49 54 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.2327+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "main.c":23:1 978 {stack_protect_test_di}
     (nil))
(jump_insn 54 53 61 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "main.c":23:1 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 57)
(note 61 54 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 55 61 56 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0115cfc400 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":23:1 666 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 56 55 57)
(code_label 57 56 62 7 5 (nil) [1 uses])
(note 62 57 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 62 59 7 (set (reg/i:SI 0 ax)
        (reg:SI 84 [ <retval> ])) "main.c":23:1 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ <retval> ])
        (nil)))
(insn 59 58 0 7 (use (reg/i:SI 0 ax)) "main.c":23:1 -1
     (nil))
