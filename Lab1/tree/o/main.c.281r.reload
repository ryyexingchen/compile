
;; Function main (main, funcdef_no=0, decl_uid=2313, cgraph_uid=1, symbol_order=0)

      Creating newreg=93
Removing SCRATCH in insn #3 (nop 2)
rescanning insn with uid = 3.
      Creating newreg=94
Removing SCRATCH in insn #53 (nop 3)
rescanning insn with uid = 53.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3:  (0) =m  (1) m  (2) =&r {stack_protect_set_di}
      Change to class INDEX_REGS for r93
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 7:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 8:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 9:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 11:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 12:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 21:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 22:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 30:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 33:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 38:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) g {*movsi_internal}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (1) m  (2) m  (3) =&r {stack_protect_test_di}
      Change to class INDEX_REGS for r94
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3
EBB 4 5 6
EBB 7

********** Pseudo live ranges #1: **********

  BB 6
   Insn 55: point = 0, n_alt = 0
  BB 7
   Insn 59: point = 0, n_alt = -1
   Insn 58: point = 0, n_alt = -2
  BB 5
   Insn 54: point = 2, n_alt = -1
   Insn 53: point = 2, n_alt = 0
   Insn 49: point = 4, n_alt = -2
   Insn 46: point = 6, n_alt = 0
  BB 4
   Insn 44: point = 7, n_alt = -1
   Insn 43: point = 7, n_alt = 0
   Insn 41: point = 8, n_alt = 0
  BB 2
   Insn 63: point = 9, n_alt = -1
   Insn 23: point = 9, n_alt = 0
   Insn 22: point = 9, n_alt = 3
   Insn 21: point = 9, n_alt = 4
   Insn 20: point = 9, n_alt = -2
   Insn 19: point = 10, n_alt = 0
   Insn 18: point = 11, n_alt = 0
   Insn 17: point = 11, n_alt = 3
   Insn 16: point = 11, n_alt = 4
   Insn 15: point = 11, n_alt = -2
   Insn 14: point = 12, n_alt = 0
   Insn 13: point = 13, n_alt = 0
   Insn 12: point = 13, n_alt = 3
   Insn 11: point = 13, n_alt = 4
   Insn 10: point = 13, n_alt = -2
   Insn 9: point = 14, n_alt = 3
   Insn 8: point = 15, n_alt = 1
   Insn 7: point = 15, n_alt = 1
   Insn 6: point = 15, n_alt = 1
   Insn 3: point = 15, n_alt = 0
  BB 3
   Insn 38: point = 17, n_alt = 1
   Insn 37: point = 17, n_alt = 1
   Insn 36: point = 18, n_alt = 0
   Insn 35: point = 19, n_alt = 0
   Insn 34: point = 19, n_alt = 3
   Insn 33: point = 19, n_alt = 4
   Insn 32: point = 19, n_alt = -2
   Insn 31: point = 20, n_alt = 0
   Insn 30: point = 21, n_alt = 1
   Insn 29: point = 22, n_alt = 0
   Insn 28: point = 23, n_alt = 1
   Insn 27: point = 24, n_alt = 0
 r82: [7..8]
 r83: [5..6]
 r84: [0..4]
 r85: [13..14]
 r86: [11..12]
 r87: [9..10]
 r88: [23..24]
 r89: [21..22]
 r90: [19..20]
 r91: [17..18]
 r93: [15..16]
 r94: [2..3]
Compressing live ranges: from 25 to 22 - 88%
Ranges after the compression:
 r82: [4..5]
 r83: [2..3]
 r84: [0..1]
 r85: [10..11]
 r86: [8..9]
 r87: [6..7]
 r88: [20..21]
 r89: [18..19]
 r90: [16..17]
 r91: [14..15]
 r93: [12..13]
 r94: [0..1]

********** Assignment #1: **********

	 Assigning to 93 (cl=INDEX_REGS, orig=93, freq=1000, tfirst=93, tfreq=1000)...
	   Assign 0 to reload r93 (freq=1000)
	 Assigning to 94 (cl=INDEX_REGS, orig=94, freq=1000, tfirst=94, tfreq=1000)...
	   Assign 1 to reload r94 (freq=1000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=48, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 19 to 7 (offset=32, prev_offset=0)
Can eliminate 19 to 6 (offset=0, prev_offset=0)
changing reg in insn 41
changing reg in insn 43
changing reg in insn 46
changing reg in insn 49
changing reg in insn 49
changing reg in insn 58
changing reg in insn 9
changing reg in insn 10
changing reg in insn 14
changing reg in insn 15
changing reg in insn 19
changing reg in insn 20
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 36
changing reg in insn 37
changing reg in insn 3
changing reg in insn 53
deleting insn with uid = 49.
deleting insn with uid = 58.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 23.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 55.


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags]
;;  ref usage 	r0={20d,14u} r1={7d} r2={6d} r4={10d,4u} r5={10d,4u} r6={1d,27u} r7={1d,12u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={11d,2u} r18={5d} r19={1d,1u} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 446{382d,64u,0e} in 40{35 regular + 5 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 3 2 NOTE_INSN_FUNCTION_BEG)
(insn 3 2 6 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                        (const_int -8 [0xfffffffffffffff8])) [1 D.2327+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [93])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":5:1 976 {stack_protect_set_di}
     (nil))
(insn 6 3 7 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A32])
        (const_int 0 [0])) "main.c":8:6 67 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])
        (const_int 1 [0x1])) "main.c":9:6 67 {*movsi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "main.c":10:6 67 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg:DI 0 ax [85])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":11:4 191 {*adddi_1}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 0 ax [85])) "main.c":11:4 66 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7f0115cf6510 *.LC0>)) "main.c":11:4 66 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":11:4 69 {*movqi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7f0115c1f600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":11:4 677 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 14 13 15 2 (set (reg:SI 0 ax [86])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A32])) "main.c":12:4 67 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SI 4 si)
        (reg:SI 0 ax [86])) "main.c":12:4 67 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f0115cf65a0 *.LC1>)) "main.c":12:4 66 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":12:4 69 {*movqi_internal}
     (nil))
(call_insn 18 17 19 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f0115c1ea00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":12:4 677 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 19 18 20 2 (set (reg:SI 0 ax [87])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])) "main.c":13:4 67 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (reg:SI 0 ax [87])) "main.c":13:4 67 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f0115cf65a0 *.LC1>)) "main.c":13:4 66 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":13:4 69 {*movqi_internal}
     (nil))
(call_insn 23 22 63 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f0115c1ea00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":13:4 677 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(jump_insn 63 23 64 2 (set (pc)
        (label_ref 39)) "main.c":15:9 660 {jump}
     (nil)
 -> 39)
(barrier 64 63 42)
(code_label 42 64 26 3 3 (nil) [1 uses])
(note 26 42 27 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 3 (set (reg:SI 0 ax [88])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])) "main.c":17:9 67 {*movsi_internal}
     (nil))
(insn 28 27 29 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [2 t+0 S4 A32])
        (reg:SI 0 ax [88])) "main.c":17:9 67 {*movsi_internal}
     (nil))
(insn 29 28 30 3 (set (reg:SI 0 ax [89])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A32])) "main.c":18:9 67 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])
                    (reg:SI 0 ax [89])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:9 190 {*addsi_1}
     (nil))
(insn 31 30 32 3 (set (reg:SI 0 ax [90])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [2 b+0 S4 A32])) "main.c":19:7 67 {*movsi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:SI 4 si)
        (reg:SI 0 ax [90])) "main.c":19:7 67 {*movsi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f0115cf65a0 *.LC1>)) "main.c":19:7 66 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":19:7 69 {*movqi_internal}
     (nil))
(call_insn 35 34 36 3 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7f0115c1ea00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) "main.c":19:7 677 {*call_value}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (nil)))))
(insn 36 35 37 3 (set (reg:SI 0 ax [91])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -12 [0xfffffffffffffff4])) [2 t+0 S4 A32])) "main.c":20:9 67 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S4 A32])
        (reg:SI 0 ax [91])) "main.c":20:9 67 {*movsi_internal}
     (nil))
(insn 38 37 39 3 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":21:9 190 {*addsi_1}
     (nil))
(code_label 39 38 40 4 2 (nil) [1 uses])
(note 40 39 41 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 43 4 (set (reg:SI 0 ax [orig:82 n.0_1 ] [82])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 n+0 S4 A32])) "main.c":15:12 67 {*movsi_internal}
     (nil))
(insn 43 41 44 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -16 [0xfffffffffffffff0])) [2 i+0 S4 A32])
            (reg:SI 0 ax [orig:82 n.0_1 ] [82]))) "main.c":15:9 11 {*cmpsi_1}
     (nil))
(jump_insn 44 43 45 4 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "main.c":15:9 659 {*jcc}
     (nil)
 -> 42)
(note 45 44 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 53 5 (set (reg:SI 0 ax [orig:83 _14 ] [83])
        (const_int 0 [0])) "<built-in>":0:0 67 {*movsi_internal}
     (nil))
(insn 53 46 54 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 6 bp)
                                (const_int -8 [0xfffffffffffffff8])) [1 D.2327+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [0 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 1 dx [94]))
        ]) "main.c":23:1 978 {stack_protect_test_di}
     (nil))
(jump_insn 54 53 61 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "main.c":23:1 659 {*jcc}
     (nil)
 -> 57)
(note 61 54 55 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 55 61 56 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7f0115cfc400 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":23:1 666 {*call}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (expr_list:REG_NORETURN (const_int 0 [0])
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (nil))
(barrier 56 55 57)
(code_label 57 56 62 7 5 (nil) [1 uses])
(note 62 57 59 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 59 62 65 7 (use (reg/i:SI 0 ax)) "main.c":23:1 -1
     (nil))
(note 65 59 0 NOTE_INSN_DELETED)
