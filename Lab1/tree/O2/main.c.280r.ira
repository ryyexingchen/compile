
;; Function main (main, funcdef_no=23, decl_uid=2510, cgraph_uid=24, symbol_order=23) (executed once)

Starting decreasing number of live ranges...
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 6 }
;; 6 succs { }
;; 7 succs { 1 }
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
Reg 93: def dominates all uses has unique first use
Reg 83: local to bb 4 def dominates all uses has unique first use
Examining insn 30, def for 83
  all ok
Reg 93 not local to one basic block
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;;
;; Loop 1
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;; 2 succs { 3 5 }
;; 3 succs { 4 }
;; 4 succs { 4 5 }
;; 5 succs { 7 6 }
;; 6 succs { }
;; 7 succs { 1 }
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
init_insns for 93: (insn_list:REG_DEP_TRUE 33 (nil))
Reg 90 had equivalence, but can't be eliminated

Pass 0 for finding pseudo/allocno costs

    a8 (r93,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a0 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a4 (r90,l0) best SIREG, allocno SIREG
    a7 (r87,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a1 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a6 (r85,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a3 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a5 (r84,l1) best GENERAL_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    a9 (r83,l1) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: AREG:0,1780 DREG:0,1780 CREG:0,1780 BREG:0,1780 SIREG:0,1780 DIREG:0,1780 AD_REGS:0,1780 CLOBBERED_REGS:0,1780 Q_REGS:0,1780 NON_Q_REGS:0,1780 TLS_GOTBASE_REGS:0,1780 GENERAL_REGS:0,1780 SSE_FIRST_REG:776,7896 NO_REX_SSE_REGS:776,7896 SSE_REGS:776,7896 MMX_REGS:970,12540 INT_SSE_REGS:970,12540 ALL_REGS:10088,198768 MEM:485,5825
  a1(r87,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:582,13042 NO_REX_SSE_REGS:582,13042 SSE_REGS:582,13042 MMX_REGS:582,17492 INT_SSE_REGS:582,17492 ALL_REGS:9700,287380 MEM:97,5437
  a2(r84,l0) costs: AREG:0,1780 DREG:0,1780 CREG:0,1780 BREG:0,1780 SIREG:0,1780 DIREG:0,1780 AD_REGS:0,1780 CLOBBERED_REGS:0,1780 Q_REGS:0,1780 NON_Q_REGS:0,1780 TLS_GOTBASE_REGS:0,1780 GENERAL_REGS:0,1780 SSE_FIRST_REG:582,29062 NO_REX_SSE_REGS:582,29062 SSE_REGS:582,29062 MMX_REGS:582,46862 INT_SSE_REGS:582,46862 ALL_REGS:9700,764420 MEM:97,18787
  a3(r85,l0) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:582,21942 NO_REX_SSE_REGS:582,21942 SSE_REGS:582,21942 MMX_REGS:582,35292 INT_SSE_REGS:582,35292 ALL_REGS:9700,575740 MEM:97,14337
  a4(r90,l0) costs: AREG:220,220 DREG:220,220 CREG:220,220 BREG:220,220 SIREG:-110,-110 DIREG:220,220 AD_REGS:220,220 CLOBBERED_REGS:220,220 Q_REGS:220,220 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:1760,1760 NO_REX_SSE_REGS:1760,1760 SSE_REGS:1760,1760 MMX_REGS:2860,2860 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1320,1320
  a5(r84,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:28480,28480 NO_REX_SSE_REGS:28480,28480 SSE_REGS:28480,28480 MMX_REGS:46280,46280 INT_SSE_REGS:46280,46280 ALL_REGS:754720,754720 MEM:18690,18690
  a6(r85,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:34710,34710 INT_SSE_REGS:34710,34710 ALL_REGS:566040,566040 MEM:14240,14240
  a7(r87,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12460,12460 NO_REX_SSE_REGS:12460,12460 SSE_REGS:12460,12460 MMX_REGS:16910,16910 INT_SSE_REGS:16910,16910 ALL_REGS:277680,277680 MEM:5340,5340
  a8(r93,l1) costs: AREG:1780,1780 DREG:1780,1780 CREG:1780,1780 BREG:1780,1780 SIREG:1780,1780 DIREG:1780,1780 AD_REGS:1780,1780 CLOBBERED_REGS:1780,1780 Q_REGS:1780,1780 NON_Q_REGS:1780,1780 TLS_GOTBASE_REGS:1780,1780 GENERAL_REGS:1780,1780 SSE_FIRST_REG:7120,7120 NO_REX_SSE_REGS:7120,7120 SSE_REGS:7120,7120 MMX_REGS:11570,11570 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:5340,5340
  a9(r83,l1) costs: AREG:0,0 DREG:0,0 CREG:0,0 BREG:0,0 SIREG:0,0 DIREG:0,0 AD_REGS:0,0 CLOBBERED_REGS:0,0 Q_REGS:0,0 NON_Q_REGS:0,0 TLS_GOTBASE_REGS:0,0 GENERAL_REGS:0,0 SSE_FIRST_REG:12460,12460 NO_REX_SSE_REGS:12460,12460 SSE_REGS:12460,12460 MMX_REGS:16910,16910 INT_SSE_REGS:16910,16910 ALL_REGS:277680,277680 MEM:5340,5340


Pass 1 for finding pseudo/allocno costs

    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r90: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS

  a0(r93,l0) costs: GENERAL_REGS:0,1780 SSE_FIRST_REG:776,15016 NO_REX_SSE_REGS:776,15016 SSE_REGS:776,15016 MMX_REGS:1261,24401 INT_SSE_REGS:1261,12831 ALL_REGS:10670,199350 MEM:582,11262
  a1(r87,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:776,15016 NO_REX_SSE_REGS:776,15016 SSE_REGS:776,15016 MMX_REGS:1164,23414 INT_SSE_REGS:1164,23414 ALL_REGS:10282,293302 MEM:582,10372
  a2(r84,l0) costs: GENERAL_REGS:0,1780 SSE_FIRST_REG:776,36376 NO_REX_SSE_REGS:776,36376 SSE_REGS:776,36376 MMX_REGS:1164,59014 INT_SSE_REGS:1164,47444 ALL_REGS:10282,765002 MEM:582,24612
  a3(r85,l0) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:776,22136 NO_REX_SSE_REGS:776,22136 SSE_REGS:776,22136 MMX_REGS:1164,35874 INT_SSE_REGS:1164,35874 ALL_REGS:10282,576322 MEM:582,14822
  a4(r90,l0) costs: AREG:440,440 DREG:440,440 CREG:440,440 BREG:440,440 SIREG:220,-110 DIREG:440,440 AD_REGS:440,440 CLOBBERED_REGS:220,220 Q_REGS:440,440 NON_Q_REGS:220,220 TLS_GOTBASE_REGS:220,220 GENERAL_REGS:220,220 SSE_FIRST_REG:2640,2640 NO_REX_SSE_REGS:2640,2640 SSE_REGS:2640,2640 MMX_REGS:4290,4290 INT_SSE_REGS:2860,2860 ALL_REGS:46640,46640 MEM:1980,1980
  a5(r84,l1) costs: GENERAL_REGS:1780,1780 SSE_FIRST_REG:35600,35600 NO_REX_SSE_REGS:35600,35600 SSE_REGS:35600,35600 MMX_REGS:57850,57850 INT_SSE_REGS:46280,46280 ALL_REGS:754720,754720 MEM:24030,24030
  a6(r85,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:21360,21360 NO_REX_SSE_REGS:21360,21360 SSE_REGS:21360,21360 MMX_REGS:34710,34710 INT_SSE_REGS:34710,34710 ALL_REGS:566040,566040 MEM:14240,14240
  a7(r87,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:22250,22250 INT_SSE_REGS:22250,22250 ALL_REGS:283020,283020 MEM:9790,9790
  a8(r93,l1) costs: GENERAL_REGS:1780,1780 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:23140,23140 INT_SSE_REGS:11570,11570 ALL_REGS:188680,188680 MEM:10680,10680
  a9(r83,l1) costs: GENERAL_REGS:0,0 SSE_FIRST_REG:14240,14240 NO_REX_SSE_REGS:14240,14240 SSE_REGS:14240,14240 MMX_REGS:22250,22250 INT_SSE_REGS:22250,22250 ALL_REGS:283020,283020 MEM:9790,9790

   Insn 55(l0): point = 0
   Insn 54(l0): point = 2
   Insn 51(l0): point = 5
   Insn 50(l0): point = 8
   Insn 49(l0): point = 10
   Insn 33(l0): point = 13
   Insn 7(l0): point = 15
   Insn 6(l0): point = 17
   Insn 5(l0): point = 19
   Insn 28(l0): point = 22
   Insn 27(l0): point = 24
   Insn 24(l0): point = 26
   Insn 23(l0): point = 28
   Insn 22(l0): point = 30
   Insn 21(l0): point = 32
   Insn 20(l0): point = 34
   Insn 19(l0): point = 36
   Insn 18(l0): point = 38
   Insn 17(l0): point = 40
   Insn 16(l0): point = 42
   Insn 15(l0): point = 44
   Insn 14(l0): point = 46
   Insn 13(l0): point = 48
   Insn 12(l0): point = 50
   Insn 11(l0): point = 52
   Insn 10(l0): point = 54
   Insn 4(l0): point = 56
   Insn 41(l1): point = 59
   Insn 40(l1): point = 61
   Insn 38(l1): point = 63
   Insn 37(l1): point = 65
   Insn 36(l1): point = 67
   Insn 35(l1): point = 69
   Insn 34(l1): point = 71
   Insn 63(l1): point = 73
   Insn 32(l1): point = 75
   Insn 31(l1): point = 77
   Insn 30(l1): point = 79
 a0(r93): [13..13]
 a1(r87): [13..15]
 a2(r84): [13..17]
 a3(r85): [13..19]
 a4(r90): [53..54]
 a5(r84): [59..81]
 a6(r85): [59..81]
 a7(r87): [78..81] [59..63]
 a8(r93): [59..81]
 a9(r83): [64..79]
      Moving ranges of a8r93 to a0r93:  [59..81]
      Moving ranges of a7r87 to a1r87:  [78..81] [59..63]
      Moving ranges of a6r85 to a3r85:  [59..81]
      Moving ranges of a5r84 to a2r84:  [59..81]
 Rebuilding regno allocno list for 83
Compressing live ranges: from 82 to 8 - 9%
Ranges after the compression:
 a0(r93): [4..7] [0..0]
 a1(r87): [4..7] [0..1]
 a2(r84): [4..7] [0..1]
 a3(r85): [4..7] [0..1]
 a4(r90): [2..3]
 a9(r83): [6..7]
+++Allocating 48 bytes for conflict table (uncompressed size 80)
;; a0(r93,l0) conflicts: a1(r87,l0) a2(r84,l0) a3(r85,l0) a9(r83,l0)
;;     total conflict hard regs: 0 1 5
;;     conflict hard regs: 0 1 5

;; a1(r87,l0) conflicts: a0(r93,l0) a2(r84,l0) a3(r85,l0) a9(r83,l0)
;;     total conflict hard regs:
;;     conflict hard regs:

;; a2(r84,l0) conflicts: a0(r93,l0) a1(r87,l0) a3(r85,l0) a9(r83,l0)
;;     total conflict hard regs: 0 4 5
;;     conflict hard regs: 0 4 5

;; a3(r85,l0) conflicts: a0(r93,l0) a1(r87,l0) a2(r84,l0) a9(r83,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5

;; a4(r90,l0) conflicts:
;;     total conflict hard regs:
;;     conflict hard regs:

;; a9(r83,l0) conflicts: a0(r93,l0) a1(r87,l0) a2(r84,l0) a3(r85,l0)
;;     total conflict hard regs: 0 1 4 5
;;     conflict hard regs: 0 1 4 5


  pref0:a4(r90)<-hr4@165
  regions=2, blocks=8, points=8
    allocnos=10 (big 0), copies=0, conflicts=0, ranges=10

**** Allocnos coloring:


  Loop 0 (parent -1, header bb2, depth 0)
    bbs: 7 6 5 4 3 2
    all: 0r93 1r87 2r84 3r85 4r90 9r83
    modified regnos: 83 84 85 87 90 93
    border:
    Pressure: GENERAL_REGS=8
    Hard reg set forest:
      0:( 0-6 8-15 20-51)@0
        1:( 0-6 36-43)@24924
          2:( 1-3 6 36-43)@45664
            3:( 2 3 6 36-43)@29644
              4:( 3 6 40-43)@38544
      Allocno a0r93 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 5 7-35 44-74)
      Allocno a1r87 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a2r84 of GENERAL_REGS(15) has 12 avail. regs  1-3 6 36-43, node:  1-3 6 36-43 (confl regs =  0 4 5 7-35 44-74)
      Allocno a3r85 of GENERAL_REGS(15) has 11 avail. regs  2 3 6 36-43, node:  2 3 6 36-43 (confl regs =  0 1 4 5 7-35 44-74)
      Allocno a4r90 of GENERAL_REGS(15) has 15 avail. regs  0-6 36-43, node:  0-6 36-43 (confl regs =  7-35 44-74)
      Allocno a9r83 of GENERAL_REGS(15) has 6 avail. regs  3 6 40-43, node:  3 6 40-43 (confl regs =  0 1 4 5 7-35 44-74)
      Pushing a4(r90,l0)(cost 0)
      Pushing a0(r93,l0)(cost 0)
      Pushing a9(r83,l0)(cost 0)
      Pushing a1(r87,l0)(cost 0)
      Pushing a3(r85,l0)(cost 0)
      Pushing a2(r84,l0)(cost 0)
      Popping a2(r84,l0)  -- assign reg 3
      Popping a3(r85,l0)  -- assign reg 6
      Popping a1(r87,l0)  -- assign reg 0
      Popping a9(r83,l0)  -- assign reg 40
      Popping a0(r93,l0)  -- assign reg 41
      Popping a4(r90,l0)  -- assign reg 4
Disposition:
    9:r83  l0    40    2:r84  l0     3    3:r85  l0     6    1:r87  l0     0
    4:r90  l0     4    0:r93  l0    41
New iteration of spill/restore move
+++Costs: overall 3450, reg 3450, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp] 16 [argp] 19 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 19 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 19 [frame] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 19 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;;  ref usage 	r0={11d,6u} r1={9d,3u} r2={6d} r4={10d,4u} r5={10d,4u} r6={1d,7u} r7={1d,12u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r16={1d,6u} r17={12d,3u} r18={5d} r19={1d,12u,2e} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r83={1d,1u} r84={2d,3u} r85={2d,2u} r87={2d,1u} r90={1d,1u} r93={1d,1u} 
;;    total ref usage 454{386d,66u,2e} in 38{33 regular + 5 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                        (const_int -8 [0xfffffffffffffff8])) [2 D.2544+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (scratch:DI)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":5:1 976 {stack_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 10 4 11 2 (parallel [
            (set (reg/f:DI 90)
                (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":11:4 191 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (reg/f:DI 90)) "main.c":11:4 66 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (expr_list:REG_EQUAL (plus:DI (reg/f:DI 19 frame)
                (const_int -12 [0xfffffffffffffff4]))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb791bda510 *.LC0>)) "main.c":11:4 66 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":11:4 69 {*movqi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fb791acc600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":11:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fb791acc600 scanf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 15 14 16 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 69 {*movqi_internal}
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 69 {*movqi_internal}
     (nil))
(call_insn 24 23 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 27 24 28 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])
            (const_int 1 [0x1]))) "main.c":15:9 11 {*cmpsi_1}
     (nil))
(jump_insn 28 27 57 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "main.c":15:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 42)
(note 57 28 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 57 6 3 (set (reg/v:SI 85 [ i ])
        (const_int 1 [0x1])) "main.c":10:6 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 6 5 7 3 (set (reg/v:SI 84 [ b ])
        (const_int 1 [0x1])) "main.c":9:6 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 7 6 33 3 (set (reg/v:SI 87 [ a ])
        (const_int 0 [0])) "main.c":8:6 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 33 7 39 3 (set (reg/f:DI 93)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)
        (nil)))
(code_label 39 33 29 4 3 (nil) [1 uses])
(note 29 39 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/v:SI 83 [ b ])
        (reg/v:SI 84 [ b ])) 67 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg/v:SI 84 [ b ])
                (plus:SI (reg/v:SI 84 [ b ])
                    (reg/v:SI 87 [ a ])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:9 190 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 87 [ a ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 32 31 63 4 (set (reg:SI 1 dx)
        (reg/v:SI 84 [ b ])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 63 32 34 4 (set (reg:DI 4 si)
        (reg/f:DI 93)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (nil))
(insn 34 63 35 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 69 {*movqi_internal}
     (nil))
(call_insn 36 35 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 37 36 38 4 (parallel [
            (set (reg/v:SI 85 [ i ])
                (plus:SI (reg/v:SI 85 [ i ])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":21:9 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 38 37 40 4 (set (reg/v:SI 87 [ a ])
        (reg/v:SI 83 [ b ])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 83 [ b ])
        (nil)))
(insn 40 38 41 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 19 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 n+0 S4 A32])
            (reg/v:SI 85 [ i ]))) "main.c":15:9 11 {*cmpsi_1}
     (nil))
(jump_insn 41 40 42 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) "main.c":15:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 39)
(code_label 42 41 43 5 2 (nil) [1 uses])
(note 43 42 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 43 50 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 19 frame)
                                (const_int -8 [0xfffffffffffffff8])) [2 D.2544+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (scratch:DI))
        ]) "main.c":23:1 978 {stack_protect_test_di}
     (nil))
(jump_insn 50 49 58 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "main.c":23:1 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 1073312332 (nil)))
 -> 53)
(note 58 50 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 51 58 52 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb791bd9400 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":23:1 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb791bd9400 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 52 51 53)
(code_label 53 52 59 7 4 (nil) [1 uses])
(note 59 53 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 59 55 7 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "main.c":23:1 67 {*movsi_internal}
     (nil))
(insn 55 54 0 7 (use (reg/i:SI 0 ax)) "main.c":23:1 -1
     (nil))
