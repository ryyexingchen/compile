
;; Function printf (printf, funcdef_no=15, decl_uid=937, cgraph_uid=16, symbol_order=15)

;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Value ranges after Early VRP:

__fmt_2(D): const char * restrict ~[0B, 0B]
_4: VARYING


__attribute__((artificial, gnu_inline, always_inline))
printf (const char * restrict __fmt)
{
  int _4;

  <bb 2> :
  _4 = __printf_chk (1, __fmt_2(D), __builtin_va_arg_pack ());
  return _4;

}



;; Function main (main, funcdef_no=23, decl_uid=2510, cgraph_uid=24, symbol_order=23)

;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }

Value ranges after Early VRP:

n.0_1: VARYING
a_2: VARYING
b_3: VARYING
i_4: int [1, +INF]
b_16: VARYING
i_19: int [2, +INF]
_20: VARYING
_21: VARYING
_22: VARYING


main ()
{
  int D.2534;
  int D.2532;
  int D.2530;
  int n;
  int t;
  int i;
  int b;
  int a;
  int n.0_1;
  int _20;
  int _21;
  int _22;

  <bb 2> :
  scanf ("%d", &n);
  _21 = __printf_chk (1, "%d\n", 0);
  _20 = __printf_chk (1, "%d\n", 1);
  goto <bb 4>; [100.00%]

  <bb 3> :
  b_16 = a_2 + b_3;
  _22 = __printf_chk (1, "%d\n", b_16);
  i_19 = i_4 + 1;

  <bb 4> :
  # a_2 = PHI <0(2), b_3(3)>
  # b_3 = PHI <1(2), b_16(3)>
  # i_4 = PHI <1(2), i_19(3)>
  n.0_1 = n;
  if (n.0_1 > i_4)
    goto <bb 3>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 5> :
  n ={v} {CLOBBER};
  return 0;

}


