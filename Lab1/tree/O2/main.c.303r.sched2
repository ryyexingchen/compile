
;; Function main (main, funcdef_no=23, decl_uid=2510, cgraph_uid=24, symbol_order=23) (executed once)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)


main

Dataflow summary:
def_info->table_size = 382, use_info->table_size = 0
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12] 41 [r13]
;;  ref usage 	r0={14d,7u} r1={9d,3u} r2={6d} r3={4d,5u} r4={10d,4u} r5={10d,4u} r6={4d,4u} r7={11d,29u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={19d,3u} r18={5d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r40={3d,3u} r41={3d,3u} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 473{408d,65u,0e} in 47{42 regular + 5 call} insns.

( )->[0]->( 2 )
;; bb 0 artificial_defs: { d-1(0){ }d-1(1){ }d-1(2){ }d-1(3){ }d-1(4){ }d-1(5){ }d-1(6){ }d-1(7){ }d-1(20){ }d-1(21){ }d-1(22){ }d-1(23){ }d-1(24){ }d-1(25){ }d-1(26){ }d-1(27){ }d-1(36){ }d-1(37){ }d-1(40){ }d-1(41){ }}
;; bb 0 artificial_uses: { }
;; lr  in  	
;; lr  use 	
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13]
;; live  in  	
;; live  gen 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13]
;; live  kill	
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; live  out 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]

( 0 )->[2]->( 3 5 )
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; live  gen 	 0 [ax] 1 [dx] 4 [si] 5 [di] 7 [sp] 17 [flags]
;; live  kill	 17 [flags]
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 2 )->[3]->( 4 )
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 17 [flags] 41 [r13]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 41 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r13]

( 3 4 )->[4]->( 4 5 )
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 40 [r12] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r13]
;; live  gen 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 40 [r12]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r13]

( 2 4 )->[5]->( 6 7 )
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
;; live  in  	 7 [sp]
;; live  gen 	 17 [flags]
;; live  kill	 0 [ax]
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 5 )->[6]->( 1 )
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 17 [flags] 40 [r12] 41 [r13]
;; live  in  	 7 [sp]
;; live  gen 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; live  kill	 17 [flags]
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; live  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]

( 5 )->[7]->( )
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(7){ }}
;; lr  in  	 7 [sp]
;; lr  use 	 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;; live  in  	 7 [sp]
;; live  gen 	
;; live  kill	
;; lr  out 	 7 [sp]
;; live  out 	 7 [sp]

( 6 )->[1]->( )
;; bb 1 artificial_defs: { }
;; bb 1 artificial_uses: { u-1(0){ }u-1(3){ }u-1(6){ }u-1(7){ }u-1(40){ }u-1(41){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; lr  use 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; lr  def 	
;; live  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;; live  gen 	
;; live  kill	
;; lr  out 	
;; live  out 	

Finding needed instructions:
  Adding insn 28 to worklist
  Adding insn 24 to worklist
  Adding insn 19 to worklist
  Adding insn 14 to worklist
  Adding insn 4 to worklist
  Adding insn 69 to worklist
  Adding insn 68 to worklist
  Adding insn 67 to worklist
  Adding insn 66 to worklist
  Adding insn 41 to worklist
  Adding insn 36 to worklist
  Adding insn 50 to worklist
  Adding insn 49 to worklist
  Adding insn 78 to worklist
  Adding insn 55 to worklist
  Adding insn 51 to worklist
Finished finding needed instructions:
processing block 6 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
  Adding insn 77 to worklist
  Adding insn 76 to worklist
  Adding insn 75 to worklist
  Adding insn 74 to worklist
  Adding insn 73 to worklist
  Adding insn 84 to worklist
processing block 7 lr out =  7 [sp]
processing block 5 lr out =  7 [sp]
processing block 4 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r13]
  Adding insn 40 to worklist
  Adding insn 38 to worklist
  Adding insn 37 to worklist
  Adding insn 85 to worklist
  Adding insn 34 to worklist
  Adding insn 63 to worklist
  Adding insn 32 to worklist
  Adding insn 31 to worklist
  Adding insn 30 to worklist
processing block 3 lr out =  0 [ax] 3 [bx] 6 [bp] 7 [sp] 41 [r13]
  Adding insn 33 to worklist
  Adding insn 86 to worklist
  Adding insn 6 to worklist
  Adding insn 5 to worklist
processing block 2 lr out =  7 [sp]
  Adding insn 27 to worklist
  Adding insn 89 to worklist
  Adding insn 22 to worklist
  Adding insn 21 to worklist
  Adding insn 20 to worklist
  Adding insn 88 to worklist
  Adding insn 17 to worklist
  Adding insn 16 to worklist
  Adding insn 87 to worklist
  Adding insn 12 to worklist
  Adding insn 65 to worklist
  Adding insn 70 to worklist
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 9 (  1.1)
;;   ======================================================
;;   -- basic block 2 from 66 to 28 -- after reload
;;   ======================================================

;;	  0--> b  0: i  66 [--sp]=r13                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  0--> b  0: i  12 di=`*.LC0'                              :hsw_decodern,hsw_p1|hsw_p5
;;	  1--> b  0: i  67 [--sp]=r12                              :hsw_decodern,(hsw_p4+hsw_p237)
;;	  2--> b  0: i  68 [--sp]=bp                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  3--> b  0: i  69 [--sp]=bx                               :hsw_decodern,(hsw_p4+hsw_p237)
;;	  6--> b  0: i  70 {sp=sp-0x18;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  7--> b  0: i   4 {[sp+0x8]=unspec[[0x28]] 78;ax=0;clobber flags;}:hsw_decoder0
;;	  7--> b  0: i  65 si=sp+0x4                               :hsw_decodern,hsw_p1|hsw_p5
;;	 13--> b  0: i  14 ax=call [`*__isoc99_scanf']             :hsw_decoder0
;;	 13--> b  0: i  87 {dx=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	 13--> b  0: i  16 si=`*.LC1'                              :hsw_decodern,hsw_p1|hsw_p5
;;	 13--> b  0: i  88 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	 14--> b  0: i  17 di=0x1                                  :hsw_decodern,hsw_p0156
;;	 15--> b  0: i  19 ax=call [`__printf_chk']                :hsw_decoder0
;;	 15--> b  0: i  89 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	 15--> b  0: i  20 dx=0x1                                  :hsw_decodern,hsw_p0156
;;	 15--> b  0: i  21 si=`*.LC1'                              :hsw_decodern,hsw_p1|hsw_p5
;;	 16--> b  0: i  22 di=0x1                                  :hsw_decodern,hsw_p0156
;;	 17--> b  0: i  24 ax=call [`__printf_chk']                :hsw_decoder0
;;	 17--> b  0: i  27 flags=cmp([sp+0x4],0x1)                 :hsw_decodern,(hsw_p23+hsw_p0156)
;;	 18--> b  0: i  28 pc={(flags<=0)?L42:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 18
;;   new head = 66
;;   new tail = 28

;;   ======================================================
;;   -- basic block 3 from 5 to 33 -- after reload
;;   ======================================================

;;	  0--> b  0: i   5 bp=0x1                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i   6 bx=0x1                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  86 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  33 r13=`*.LC1'                             :hsw_decodern,hsw_p1|hsw_p5
;;	Ready list (final):  
;;   total time = 1
;;   new head = 5
;;   new tail = 33

;;   ======================================================
;;   -- basic block 4 from 30 to 41 -- after reload
;;   ======================================================

;;	  0--> b  0: i  30 r12=bx                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  31 {bx=bx+ax;clobber flags;}               :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  63 si=r13                                  :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  34 di=0x1                                  :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  32 dx=bx                                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  85 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  1--> b  0: i  37 {bp=bp+0x1;clobber flags;}              :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  36 ax=call [`__printf_chk']                :hsw_decoder0
;;	  2--> b  0: i  38 ax=r12                                  :hsw_decodern,hsw_p0156
;;	  2--> b  0: i  40 flags=cmp([sp+0x4],bp)                  :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i  41 pc={(flags>0)?L39:pc}                   :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 2
;;   new head = 30
;;   new tail = 41

;;   ======================================================
;;   -- basic block 5 from 49 to 50 -- after reload
;;   ======================================================

;;	  0--> b  0: i  49 {flags=unspec[[sp+0x8],[0x28]] 79;clobber ax;}:hsw_decoder0
;;	  6--> b  0: i  50 pc={(flags!=0)?L90:pc}                  :hsw_decodern,hsw_p6
;;	Ready list (final):  
;;   total time = 6
;;   new head = 49
;;   new tail = 50

;;   ======================================================
;;   -- basic block 6 from 84 to 78 -- after reload
;;   ======================================================

;;	  0--> b  0: i  73 {sp=sp+0x18;clobber flags;clobber [scratch];}:hsw_decodern,hsw_p0156
;;	  0--> b  0: i  84 {ax=0;clobber flags;}                   :hsw_decodern,hsw_p0156
;;	  0--> b  0: i  55 use ax                                  :nothing
;;	  1--> b  0: i  74 bx=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  1--> b  0: i  75 bp=[sp++]                               :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i  76 r12=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  2--> b  0: i  77 r13=[sp++]                              :hsw_decodern,(hsw_p23+hsw_p0156)
;;	  3--> b  0: i  78 simple_return                           :hsw_decoder0
;;	Ready list (final):  
;;   total time = 3
;;   new head = 91
;;   new tail = 78

;;   ======================================================
;;   -- basic block 7 from 51 to 51 -- after reload
;;   ======================================================

;;	  0--> b  0: i  51 call [`__stack_chk_fail']               :hsw_decoder0
;;	Ready list (final):  
;;   total time = 0
;;   new head = 51
;;   new tail = 51



starting the processing of deferred insns
ending the processing of deferred insns


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9] 40 [r12] 41 [r13]
;;  exit block uses 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 40 [r12] 41 [r13]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12] 41 [r13]
;;  ref usage 	r0={14d,7u} r1={9d,3u} r2={6d} r3={4d,5u} r4={10d,4u} r5={10d,4u} r6={4d,4u} r7={11d,29u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={19d,3u} r18={5d} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r40={3d,3u} r41={3d,3u} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 473{408d,65u,0e} in 47{42 regular + 5 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 66 2 NOTE_INSN_FUNCTION_BEG)
(insn/f:TI 66 2 12 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r13)) "main.c":5:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 41 r13)
        (nil)))
(insn 12 66 67 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb791bda510 *.LC0>)) "main.c":11:4 66 {*movdi_internal}
     (nil))
(insn/f:TI 67 12 68 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 40 r12)) "main.c":5:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 40 r12)
        (nil)))
(insn/f:TI 68 67 69 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 6 bp)) "main.c":5:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 6 bp)
        (nil)))
(insn/f:TI 69 68 70 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "main.c":5:1 42 {*pushdi2_rex64}
     (expr_list:REG_DEAD (reg:DI 3 bx)
        (nil)))
(insn/f:TI 70 69 71 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "main.c":5:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -24 [0xffffffffffffffe8])))
            (nil))))
(note 71 70 4 2 NOTE_INSN_PROLOGUE_END)
(insn:TI 4 71 65 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 8 [0x8])) [2 D.2544+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [94])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":5:1 976 {stack_protect_set_di}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 65 4 14 2 (set (reg/f:DI 4 si [90])
        (plus:DI (reg/f:DI 7 sp)
            (const_int 4 [0x4]))) "main.c":11:4 187 {*leadi}
     (nil))
(call_insn:TI 14 65 87 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fb791acc600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":11:4 677 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:SI 0 ax)
                (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fb791acc600 scanf>)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 87 14 16 2 (parallel [
            (set (reg:DI 1 dx)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 16 87 88 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (nil))
(insn 88 16 17 2 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 17 88 19 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(call_insn:TI 19 17 89 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 89 19 20 2 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 89 21 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (nil))
(insn:TI 22 21 24 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(call_insn:TI 24 22 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 27 24 28 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [1 n+0 S4 A32])
            (const_int 1 [0x1]))) "main.c":15:9 11 {*cmpsi_1}
     (nil))
(jump_insn:TI 28 27 57 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "main.c":15:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 118111604 (nil)))
 -> 42)
(note 57 28 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn:TI 5 57 6 3 (set (reg/v:SI 6 bp [orig:85 i ] [85])
        (const_int 1 [0x1])) "main.c":10:6 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 6 5 86 3 (set (reg/v:SI 3 bx [orig:84 b ] [84])
        (const_int 1 [0x1])) "main.c":9:6 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 86 6 33 3 (parallel [
            (set (reg:DI 0 ax [orig:87 a ] [87])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":8:6 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn:TI 33 86 39 3 (set (reg/f:DI 41 r13 [93])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)
        (nil)))
(code_label 39 33 29 4 3 (nil) [1 uses])
(note 29 39 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn:TI 30 29 31 4 (set (reg/v:SI 40 r12 [orig:83 b ] [83])
        (reg/v:SI 3 bx [orig:84 b ] [84])) 67 {*movsi_internal}
     (nil))
(insn 31 30 63 4 (parallel [
            (set (reg/v:SI 3 bx [orig:84 b ] [84])
                (plus:SI (reg/v:SI 3 bx [orig:84 b ] [84])
                    (reg/v:SI 0 ax [orig:87 a ] [87])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:9 190 {*addsi_1}
     (expr_list:REG_DEAD (reg/v:SI 0 ax [orig:87 a ] [87])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 63 31 34 4 (set (reg:DI 4 si)
        (reg/f:DI 41 r13 [93])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (nil))
(insn 34 63 32 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn:TI 32 34 85 4 (set (reg:SI 1 dx)
        (reg/v:SI 3 bx [orig:84 b ] [84])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 85 32 37 4 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 37 85 36 4 (parallel [
            (set (reg/v:SI 6 bp [orig:85 i ] [85])
                (plus:SI (reg/v:SI 6 bp [orig:85 i ] [85])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":21:9 190 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(call_insn:TI 36 37 38 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 677 {*call_value}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>)
                        (nil))))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 38 36 40 4 (set (reg/v:SI 0 ax [orig:87 a ] [87])
        (reg/v:SI 40 r12 [orig:83 b ] [83])) 67 {*movsi_internal}
     (expr_list:REG_DEAD (reg/v:SI 40 r12 [orig:83 b ] [83])
        (nil)))
(insn 40 38 41 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [1 n+0 S4 A32])
            (reg/v:SI 6 bp [orig:85 i ] [85]))) "main.c":15:9 11 {*cmpsi_1}
     (nil))
(jump_insn 41 40 42 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) "main.c":15:9 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (int_list:REG_BR_PROB 955630228 (nil)))
 -> 39)
(code_label 42 41 43 5 2 (nil) [1 uses])
(note 43 42 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn:TI 49 43 50 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 8 [0x8])) [2 D.2544+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [95]))
        ]) "main.c":23:1 978 {stack_protect_test_di}
     (expr_list:REG_UNUSED (reg:DI 0 ax [95])
        (nil)))
(jump_insn:TI 50 49 59 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 90)
            (pc))) "main.c":23:1 659 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (int_list:REG_BR_PROB 429500 (nil)))
 -> 90)
(note 59 50 91 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(note 91 59 73 6 NOTE_INSN_EPILOGUE_BEG)
(insn/f:TI 73 91 84 6 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "main.c":23:1 959 {pro_epilogue_adjust_stack_di_add}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 24 [0x18])))
            (nil))))
(insn 84 73 55 6 (parallel [
            (set (reg:DI 0 ax)
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":23:1 60 {*movdi_xor}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 55 84 74 6 (use (reg/i:SI 0 ax)) "main.c":23:1 -1
     (nil))
(insn/f:TI 74 55 75 6 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "main.c":23:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 75 74 76 6 (set (reg:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "main.c":23:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f:TI 76 75 77 6 (set (reg:DI 40 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "main.c":23:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(insn/f 77 76 78 6 (set (reg:DI 41 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "main.c":23:1 52 {*popdi1}
     (expr_list:REG_CFA_ADJUST_CFA (set (reg/f:DI 7 sp)
            (plus:DI (reg/f:DI 7 sp)
                (const_int 8 [0x8])))
        (nil)))
(jump_insn:TI 78 77 81 6 (simple_return) "main.c":23:1 690 {simple_return_internal}
     (nil)
 -> simple_return)
(barrier 81 78 90)
(code_label 90 81 58 7 8 (nil) [1 uses])
(note 58 90 51 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(call_insn:TI 51 58 52 7 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb791bd9400 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":23:1 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb791bd9400 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 52 51 64)
(note 64 52 0 NOTE_INSN_DELETED)
