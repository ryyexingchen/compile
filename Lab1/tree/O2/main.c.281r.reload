
;; Function main (main, funcdef_no=23, decl_uid=2510, cgraph_uid=24, symbol_order=23) (executed once)

      Creating newreg=94
Removing SCRATCH in insn #4 (nop 2)
rescanning insn with uid = 4.
      Creating newreg=95
Removing SCRATCH in insn #49 (nop 3)
rescanning insn with uid = 49.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=64, prev_offset=0)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=0)
Can eliminate 19 to 6 (offset=-40, prev_offset=0)
            2 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4:  (0) =m  (1) m  (2) =&r {stack_protect_set_di}
      Change to class INDEX_REGS for r94
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 10:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 12:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 16:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 21:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 23:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 6:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 7:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 33:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rBwBz {*call_value}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 37:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) rm  (1) re {*cmpsi_1}
            3 Scratch win: reject+=2
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 49:  (1) m  (2) m  (3) =&r {stack_protect_test_di}
      Change to class INDEX_REGS for r95
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
	   Spilling non-eliminable hard regs: 7

********** Pseudo live ranges #1: **********

  BB 6
   Insn 51: point = 0, n_alt = 0
  BB 7
   Insn 55: point = 0, n_alt = -1
   Insn 54: point = 0, n_alt = 0
  BB 5
   Insn 50: point = 0, n_alt = -1
   Insn 49: point = 0, n_alt = 0
  BB 4
   Insn 41: point = 2, n_alt = -1
   Insn 40: point = 2, n_alt = 0
   Insn 38: point = 2, n_alt = -2
   Insn 37: point = 4, n_alt = 0
   Insn 36: point = 5, n_alt = 0
   Insn 35: point = 5, n_alt = 3
   Insn 34: point = 5, n_alt = 0
   Insn 63: point = 5, n_alt = -2
   Insn 32: point = 5, n_alt = -2
   Insn 31: point = 5, n_alt = 0
   Insn 30: point = 7, n_alt = -2
  BB 3
   Insn 33: point = 9, n_alt = 4
   Insn 7: point = 10, n_alt = 0
   Insn 6: point = 11, n_alt = 0
   Insn 5: point = 12, n_alt = 0
  BB 2
   Insn 28: point = 13, n_alt = -1
   Insn 27: point = 13, n_alt = 0
   Insn 24: point = 13, n_alt = 0
   Insn 23: point = 13, n_alt = 3
   Insn 22: point = 13, n_alt = 0
   Insn 21: point = 13, n_alt = 4
   Insn 20: point = 13, n_alt = 0
   Insn 19: point = 13, n_alt = 0
   Insn 18: point = 13, n_alt = 3
   Insn 17: point = 13, n_alt = 0
   Insn 16: point = 13, n_alt = 4
   Insn 15: point = 13, n_alt = 0
   Insn 14: point = 13, n_alt = 0
   Insn 13: point = 13, n_alt = 3
   Insn 12: point = 13, n_alt = 4
   Insn 11: point = 13, n_alt = -2
   Insn 10: point = 14, n_alt = 3
   Insn 4: point = 15, n_alt = 0
 r83: [3..7]
 r84: [2..11]
 r85: [2..12]
 r87: [6..10] [2..2]
 r90: [13..14]
 r93: [2..9]
 r94: [15..16]
 r95: [0..1]
Compressing live ranges: from 17 to 9 - 52%
Ranges after the compression:
 r83: [3..4]
 r84: [2..4]
 r85: [2..4]
 r87: [2..4]
 r90: [5..6]
 r93: [2..4]
 r94: [7..8]
 r95: [0..1]

********** Inheritance #1: **********

EBB 2 3
EBB 4
EBB 5
EBB 6
EBB 7

********** Pseudo live ranges #2: **********

  BB 6
   Insn 51: point = 0, n_alt = 0
  BB 7
   Insn 55: point = 0, n_alt = -1
   Insn 54: point = 0, n_alt = 0
  BB 5
   Insn 50: point = 0, n_alt = -1
   Insn 49: point = 0, n_alt = 0
  BB 4
   Insn 41: point = 2, n_alt = -1
   Insn 40: point = 2, n_alt = 0
   Insn 38: point = 2, n_alt = -2
   Insn 37: point = 4, n_alt = 0
   Insn 36: point = 5, n_alt = 0
   Insn 35: point = 5, n_alt = 3
   Insn 34: point = 5, n_alt = 0
   Insn 63: point = 5, n_alt = -2
   Insn 32: point = 5, n_alt = -2
   Insn 31: point = 5, n_alt = 0
   Insn 30: point = 7, n_alt = -2
  BB 3
   Insn 33: point = 9, n_alt = 4
   Insn 7: point = 10, n_alt = 0
   Insn 6: point = 11, n_alt = 0
   Insn 5: point = 12, n_alt = 0
  BB 2
   Insn 28: point = 13, n_alt = -1
   Insn 27: point = 13, n_alt = 0
   Insn 24: point = 13, n_alt = 0
   Insn 23: point = 13, n_alt = 3
   Insn 22: point = 13, n_alt = 0
   Insn 21: point = 13, n_alt = 4
   Insn 20: point = 13, n_alt = 0
   Insn 19: point = 13, n_alt = 0
   Insn 18: point = 13, n_alt = 3
   Insn 17: point = 13, n_alt = 0
   Insn 16: point = 13, n_alt = 4
   Insn 15: point = 13, n_alt = 0
   Insn 14: point = 13, n_alt = 0
   Insn 13: point = 13, n_alt = 3
   Insn 12: point = 13, n_alt = 4
   Insn 11: point = 13, n_alt = -2
   Insn 10: point = 14, n_alt = 3
   Insn 4: point = 15, n_alt = 0
 r83: [3..7]
 r84: [2..11]
 r85: [2..12]
 r87: [6..10] [2..2]
 r90: [13..14]
 r93: [2..9]
 r94: [15..16]
 r95: [0..1]
Compressing live ranges: from 17 to 9 - 52%
Ranges after the compression:
 r83: [3..4]
 r84: [2..4]
 r85: [2..4]
 r87: [2..4]
 r90: [5..6]
 r93: [2..4]
 r94: [7..8]
 r95: [0..1]

********** Assignment #1: **********

	 Assigning to 94 (cl=INDEX_REGS, orig=94, freq=110, tfirst=94, tfreq=110)...
	   Assign 0 to reload r94 (freq=110)
	 Assigning to 95 (cl=INDEX_REGS, orig=95, freq=110, tfirst=95, tfreq=110)...
	   Assign 0 to reload r95 (freq=110)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 7
	   Spilling non-eliminable hard regs: 7
New elimination table:
Can eliminate 16 to 7 (offset=64, prev_offset=64)
Can eliminate 16 to 6 (offset=8, prev_offset=0)
Can eliminate 19 to 7 (offset=16, prev_offset=16)
Can eliminate 19 to 6 (offset=-40, prev_offset=0)
changing reg in insn 30
changing reg in insn 38
changing reg in insn 31
changing reg in insn 6
changing reg in insn 32
changing reg in insn 31
changing reg in insn 30
changing reg in insn 37
changing reg in insn 5
changing reg in insn 40
changing reg in insn 37
changing reg in insn 38
changing reg in insn 7
changing reg in insn 31
changing reg in insn 10
changing reg in insn 11
changing reg in insn 33
changing reg in insn 63
changing reg in insn 4
changing reg in insn 49
deleting insn with uid = 11.


try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 19.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 51.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 8 (    1)
df_worklist_dataflow_doublequeue: n_basic_blocks 8 n_edges 9 count 9 (  1.1)


main

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 28 [mm0] 29 [mm1] 30 [mm2] 31 [mm3] 32 [mm4] 33 [mm5] 34 [mm6] 35 [mm7] 36 [r8] 37 [r9] 38 [r10] 39 [r11] 44 [xmm8] 45 [xmm9] 46 [xmm10] 47 [xmm11] 48 [xmm12] 49 [xmm13] 50 [xmm14] 51 [xmm15] 52 [] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 7 [sp]
;;  eh block artificial uses 	 7 [sp] 16 [argp]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 20 [xmm0] 21 [xmm1] 22 [xmm2] 23 [xmm3] 24 [xmm4] 25 [xmm5] 26 [xmm6] 27 [xmm7] 36 [r8] 37 [r9]
;;  exit block uses 	 0 [ax] 7 [sp]
;;  regs ever live 	 0 [ax] 1 [dx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 40 [r12] 41 [r13]
;;  ref usage 	r0={15d,7u} r1={9d,3u} r2={6d} r3={2d,3u} r4={10d,4u} r5={10d,4u} r6={2d,2u} r7={1d,17u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={12d,3u} r18={5d} r19={1e} r20={6d} r21={6d} r22={6d} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={5d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={6d} r37={6d} r38={5d} r39={5d} r40={1d,1u} r41={1d,1u} r44={5d} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} 
;;    total ref usage 430{384d,45u,1e} in 37{32 regular + 5 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 8 4 2 NOTE_INSN_FUNCTION_BEG)
(insn 4 2 10 2 (parallel [
            (set (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                        (const_int 8 [0x8])) [2 D.2544+0 S8 A64])
                (unspec:DI [
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_SET))
            (set (reg:DI 0 ax [94])
                (const_int 0 [0]))
            (clobber (reg:CC 17 flags))
        ]) "main.c":5:1 976 {stack_protect_set_di}
     (nil))
(insn 10 4 12 2 (parallel [
            (set (reg/f:DI 4 si [90])
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":11:4 191 {*adddi_1}
     (expr_list:REG_EQUIV (plus:DI (reg/f:DI 19 frame)
            (const_int -12 [0xfffffffffffffff4]))
        (nil)))
(insn 12 10 13 2 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fb791bda510 *.LC0>)) "main.c":11:4 66 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "main.c":11:4 69 {*movqi_internal}
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fb791acc600 scanf>) [0 __builtin_scanf S1 A8])
            (const_int 0 [0]))) "main.c":11:4 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("*__isoc99_scanf") [flags 0x41]  <function_decl 0x7fb791acc600 scanf>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 15 14 16 2 (set (reg:SI 1 dx)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 69 {*movqi_internal}
     (nil))
(call_insn 19 18 20 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 20 19 21 2 (set (reg:SI 1 dx)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 69 {*movqi_internal}
     (nil))
(call_insn 24 23 27 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 27 24 28 2 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [1 n+0 S4 A32])
            (const_int 1 [0x1]))) "main.c":15:9 11 {*cmpsi_1}
     (nil))
(jump_insn 28 27 57 2 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 42)
            (pc))) "main.c":15:9 659 {*jcc}
     (int_list:REG_BR_PROB 118111604 (nil))
 -> 42)
(note 57 28 5 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 5 57 6 3 (set (reg/v:SI 6 bp [orig:85 i ] [85])
        (const_int 1 [0x1])) "main.c":10:6 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 6 5 7 3 (set (reg/v:SI 3 bx [orig:84 b ] [84])
        (const_int 1 [0x1])) "main.c":9:6 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 1 [0x1])
        (nil)))
(insn 7 6 33 3 (set (reg/v:SI 0 ax [orig:87 a ] [87])
        (const_int 0 [0])) "main.c":8:6 67 {*movsi_internal}
     (expr_list:REG_EQUAL (const_int 0 [0])
        (nil)))
(insn 33 7 39 3 (set (reg/f:DI 41 r13 [93])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (expr_list:REG_EQUIV (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fb791bda5a0 *.LC1>)
        (nil)))
(code_label 39 33 29 4 3 (nil) [1 uses])
(note 29 39 30 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 4 (set (reg/v:SI 40 r12 [orig:83 b ] [83])
        (reg/v:SI 3 bx [orig:84 b ] [84])) 67 {*movsi_internal}
     (nil))
(insn 31 30 32 4 (parallel [
            (set (reg/v:SI 3 bx [orig:84 b ] [84])
                (plus:SI (reg/v:SI 3 bx [orig:84 b ] [84])
                    (reg/v:SI 0 ax [orig:87 a ] [87])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":18:9 190 {*addsi_1}
     (nil))
(insn 32 31 63 4 (set (reg:SI 1 dx)
        (reg/v:SI 3 bx [orig:84 b ] [84])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 63 32 34 4 (set (reg:DI 4 si)
        (reg/f:DI 41 r13 [93])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 66 {*movdi_internal}
     (nil))
(insn 34 63 35 4 (set (reg:SI 5 di)
        (const_int 1 [0x1])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 67 {*movsi_internal}
     (nil))
(insn 35 34 36 4 (set (reg:QI 0 ax)
        (const_int 0 [0])) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 69 {*movqi_internal}
     (nil))
(call_insn 36 35 37 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>) [0 __builtin___printf_chk S1 A8])
            (const_int 0 [0]))) "/usr/include/x86_64-linux-gnu/bits/stdio2.h":107:10 677 {*call_value}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__printf_chk") [flags 0x41]  <function_decl 0x7fb791af5300 __printf_chk>)
        (nil))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:SI (use (reg:SI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:SI (use (reg:SI 1 dx))
                    (nil))))))
(insn 37 36 38 4 (parallel [
            (set (reg/v:SI 6 bp [orig:85 i ] [85])
                (plus:SI (reg/v:SI 6 bp [orig:85 i ] [85])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "main.c":21:9 190 {*addsi_1}
     (nil))
(insn 38 37 40 4 (set (reg/v:SI 0 ax [orig:87 a ] [87])
        (reg/v:SI 40 r12 [orig:83 b ] [83])) 67 {*movsi_internal}
     (nil))
(insn 40 38 41 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 7 sp)
                    (const_int 4 [0x4])) [1 n+0 S4 A32])
            (reg/v:SI 6 bp [orig:85 i ] [85]))) "main.c":15:9 11 {*cmpsi_1}
     (nil))
(jump_insn 41 40 42 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 39)
            (pc))) "main.c":15:9 659 {*jcc}
     (int_list:REG_BR_PROB 955630228 (nil))
 -> 39)
(code_label 42 41 43 5 2 (nil) [1 uses])
(note 43 42 49 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 49 43 50 5 (parallel [
            (set (reg:CCZ 17 flags)
                (unspec:CCZ [
                        (mem/v/f/c:DI (plus:DI (reg/f:DI 7 sp)
                                (const_int 8 [0x8])) [2 D.2544+0 S8 A64])
                        (mem/v/f:DI (const_int 40 [0x28]) [3 MEM[(<address-space-1> long unsigned int *)40B]+0 S8 A64 AS1])
                    ] UNSPEC_SP_TEST))
            (clobber (reg:DI 0 ax [95]))
        ]) "main.c":23:1 978 {stack_protect_test_di}
     (nil))
(jump_insn 50 49 58 5 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 53)
            (pc))) "main.c":23:1 659 {*jcc}
     (int_list:REG_BR_PROB 1073312332 (nil))
 -> 53)
(note 58 50 51 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(call_insn 51 58 52 6 (call (mem:QI (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb791bd9400 __stack_chk_fail>) [0 __stack_chk_fail S1 A8])
        (const_int 0 [0])) "main.c":23:1 666 {*call}
     (expr_list:REG_CALL_DECL (symbol_ref:DI ("__stack_chk_fail") [flags 0x41]  <function_decl 0x7fb791bd9400 __stack_chk_fail>)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (expr_list:REG_EH_REGION (const_int 0 [0])
                    (nil)))))
    (nil))
(barrier 52 51 53)
(code_label 53 52 59 7 4 (nil) [1 uses])
(note 59 53 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 59 55 7 (set (reg/i:SI 0 ax)
        (const_int 0 [0])) "main.c":23:1 67 {*movsi_internal}
     (nil))
(insn 55 54 64 7 (use (reg/i:SI 0 ax)) "main.c":23:1 -1
     (nil))
(note 64 55 0 NOTE_INSN_DELETED)
